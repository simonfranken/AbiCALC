<Application x:Class="AbiCALC.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AbiCALC"
             StartupUri="windows/MainWindow.xaml"
             xmlns:lib="clr-namespace:lib.ATextBox;assembly=lib"
             >
    <Application.Resources>

        

        <Style TargetType="Window" x:Key="windowMain">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="16" ResizeBorderThickness="2"/>
                </Setter.Value>
            </Setter>
            <Setter Property="MaxHeight" Value="600"/>
            <Setter Property="MaxWidth" Value="1000"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="ResizeMode" Value="CanResize"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Grid Background="White">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="2"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid Background="{DynamicResource color_darkgrey}">
                                <Grid WindowChrome.IsHitTestVisibleInChrome="True">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="25"/>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.Column="3" Cursor="Hand">
                                        <Image x:Name="close_button" HorizontalAlignment="Right" Source="resources/close_logo.png" Margin="7,0,7,0" MouseLeftButtonUp="close_clicked"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#ff7f00"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <Border Grid.Column="2" Cursor="Hand">
                                        <Image x:Name="max_button" HorizontalAlignment="Right" Source="resources/max_logo.png" Margin="7,0,7,0" MouseLeftButtonUp="max_clicked"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#ff7f00"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <Border Grid.Column="1" Cursor="Hand">
                                        <Image x:Name="min_button" HorizontalAlignment="Right" Source="resources/min_logo.png" Margin="7,0,7,0" MouseLeftButtonUp="min_clicked"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#ff7f00"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </Grid>
                            </Grid>
                            <Grid Background="{DynamicResource window_chrome}" Grid.Row="1"/>
                            <Grid Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style: Navigationpanel-Icon-->
        <Style x:Key="style_icon" TargetType="Image">
            <Setter Property="Margin" Value="15"/>
            <Setter Property="MaxWidth" Value="35"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Image.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    To="8"
                                    Duration="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Image.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    To="10"
                                    Duration="0:0:0.100"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!--Style: Text-->
        <Style x:Key="style_default_text" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="fonts/#League Spartan"/>
            <Setter Property="Foreground" Value="{DynamicResource color_white}"/>
        </Style>
        <Style x:Key="style_headline_text" TargetType="TextBlock" BasedOn="{StaticResource style_default_text}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
        </Style>
        <Style x:Key="headline2_style" TargetType="TextBlock" BasedOn="{StaticResource style_default_text}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20, 13, 0, 0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="style_stacklist_text" TargetType="TextBlock" BasedOn="{StaticResource style_default_text}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!--Style: Textbox-->
        <Style x:Key="style_default_textbox" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="../fonts/#League Spartan"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Foreground" Value="#FFCCCCCC"/>
            <Setter Property="CaretBrush" Value="#FFCCCCCC"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!--Style: Border-->
        <Style x:Key="style_default_border" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource color_darkgrey}"/>
            <Setter Property="Margin" Value="7.5"/>
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
        <Style x:Key="style_animated_border" TargetType="Border" BasedOn="{StaticResource style_default_border}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    To="5"
                                    Duration="0:0:0.200">
                                    <ThicknessAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation
                                    Storyboard.TargetProperty="Margin"
                                    To="7.5"
                                    Duration="0:0:0.200">
                                    <ThicknessAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="style_navigation_border" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource color_darkgrey}"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Margin" Value="7.5, 10.5, 0, 10.5"/>
        </Style>
        <Style x:Key="style_stacklist_border" TargetType="Border" BasedOn="{StaticResource style_default_border}">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!--Style: Stackpanel-->
        <Style x:Key="style_stacklist" TargetType="StackPanel">
            <Setter Property="Margin" Value="2.5"/>
        </Style>

        <Style TargetType="Page" x:Key="pageMain">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Page">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Border Style="{DynamicResource style_default_border}">
                                <TextBlock Style="{DynamicResource style_headline_text}" Text="{TemplateBinding Title}"/>
                            </Border>
                            <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="lib:ATextBox" x:Key="Style_TextBox2_main">
            <Setter Property="HelpText" Value="Bitte eingeben!"/>
            <Setter Property="defaultStyle" Value="{StaticResource style_default_textbox}"/>
            <Setter Property="hintStyle">
                <Setter.Value>
                    <Style TargetType="TextBox" BasedOn="{StaticResource style_default_textbox}">
                        <Setter Property="FontStyle" Value="Italic"/>
                        <Setter Property="Foreground" Value="#8E8E8E" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        
        

        <!--Colorbrushs-->
        <SolidColorBrush x:Key="window_chrome">#ff7f00</SolidColorBrush>
        
        <SolidColorBrush x:Key="color_red">#ff6666</SolidColorBrush>
        <SolidColorBrush x:Key="color_orange">#ffb266</SolidColorBrush>
        <SolidColorBrush x:Key="color_yellow">#ffff66</SolidColorBrush>
        <SolidColorBrush x:Key="color_green">#66ff66</SolidColorBrush>
        <SolidColorBrush x:Key="color_blue">#66b3ff</SolidColorBrush>
        <SolidColorBrush x:Key="color_violet">#b366ff</SolidColorBrush>
        <SolidColorBrush x:Key="color_darkgrey">#1a1a1a</SolidColorBrush>
        <SolidColorBrush x:Key="color_midgrey">#262626</SolidColorBrush>
        <SolidColorBrush x:Key="color_lightgrey">#333333</SolidColorBrush>
        <SolidColorBrush x:Key="color_white">#ffffff</SolidColorBrush>

    </Application.Resources>
</Application>
